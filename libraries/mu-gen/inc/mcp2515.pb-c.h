/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: mcp2515.proto */

#ifndef PROTOBUF_C_mcp2515_2eproto__INCLUDED
#define PROTOBUF_C_mcp2515_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _MuMcp2515Store MuMcp2515Store;


/* --- enums --- */


/* --- messages --- */

struct  _MuMcp2515Store
{
  ProtobufCMessage base;
  uint32_t tx_id;
  protobuf_c_boolean tx_extended;
  uint32_t tx_dlc;
  uint64_t tx_data;
  uint32_t rx_id;
  protobuf_c_boolean rx_extended;
  uint32_t rx_dlc;
  uint64_t rx_data;
};
#define MU_MCP2515_STORE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mu_mcp2515_store__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0 }


/* MuMcp2515Store methods */
void   mu_mcp2515_store__init
                     (MuMcp2515Store         *message);
size_t mu_mcp2515_store__get_packed_size
                     (const MuMcp2515Store   *message);
size_t mu_mcp2515_store__pack
                     (const MuMcp2515Store   *message,
                      uint8_t             *out);
size_t mu_mcp2515_store__pack_to_buffer
                     (const MuMcp2515Store   *message,
                      ProtobufCBuffer     *buffer);
MuMcp2515Store *
       mu_mcp2515_store__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mu_mcp2515_store__free_unpacked
                     (MuMcp2515Store *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MuMcp2515Store_Closure)
                 (const MuMcp2515Store *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor mu_mcp2515_store__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_mcp2515_2eproto__INCLUDED */
