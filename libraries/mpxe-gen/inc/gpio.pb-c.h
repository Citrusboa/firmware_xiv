/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: gpio.proto */

#ifndef PROTOBUF_C_gpio_2eproto__INCLUDED
#define PROTOBUF_C_gpio_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

typedef struct _MxGpioStore MxGpioStore;

/* --- enums --- */

/* --- messages --- */

struct _MxGpioStore {
  ProtobufCMessage base;
  size_t n_state;
  protobuf_c_boolean *state;
};
#define MX_GPIO_STORE__INIT                             \
  {                                                     \
    PROTOBUF_C_MESSAGE_INIT(&mx_gpio_store__descriptor) \
    , 0, NULL                                           \
  }

/* MxGpioStore methods */
void mx_gpio_store__init(MxGpioStore *message);
size_t mx_gpio_store__get_packed_size(const MxGpioStore *message);
size_t mx_gpio_store__pack(const MxGpioStore *message, uint8_t *out);
size_t mx_gpio_store__pack_to_buffer(const MxGpioStore *message, ProtobufCBuffer *buffer);
MxGpioStore *mx_gpio_store__unpack(ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void mx_gpio_store__free_unpacked(MxGpioStore *message, ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MxGpioStore_Closure)(const MxGpioStore *message, void *closure_data);

/* --- services --- */

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor mx_gpio_store__descriptor;

PROTOBUF_C__END_DECLS

#endif /* PROTOBUF_C_gpio_2eproto__INCLUDED */
